{
  "hash": "9acaf21883c030016110145060b7df73",
  "result": {
    "markdown": "---\ntitle: \"Investigating Socioecomonic Factors in the 2021 Houston Blackout with Geospatial Data\"\ndescription: |\n  \"Estimating the number of homes in Houston that lost power as a result of the first two storms and investigating if socioeconomic factors are predictors of communities recovery from a power outage.\"\nauthor:\n  - name: Jared Petry \n    url: https://jaredbpetry.github.io\n    affiliation: Master of Environmental Data Science Program at UCSB\ndate: 2023-02-01\n#bibliography: references.bib\ncatagories: [MEDS, R, geospatial, environmental justice, raster algebra]\n#citation: \n  #url:\n  #photo:\nimage: blackout.png\ndraft: false\nformat: \n  html: \n    code-fold: false\n    code-summary: \"Show Code\"\n    toc: true\n    toc-depth: 6 \n    toc-title: Contents\ncode-overflow: wrap\ncode-block-bg: true\ncode-block-border-left: \"#6B5A75\"\neditor: visual\n---\n\n\n\n\n## Overview\n\n\"In February 2021, the state of Texas suffered a major power crisis, which came about as a result of three severe winter storms sweeping across the United States on February 10--11, 13--17, and 15--20.\"[^1] For more background, check out these [engineering](https://www.youtube.com/watch?v=08mwXICY4JM&ab_channel=PracticalEngineering) and [political](https://www.youtube.com/watch?v=Zcrsgdl_hP0&ab_channel=Vox) perspectives.\n\n[^1]: Wikipedia. 2021. \"2021 Texas power crisis.\" Last modified October 2, 2021. <https://en.wikipedia.org/wiki/2021_Texas_power_crisis>.\n\nFor this assignment, we will:\\\n- estimate the number of homes in Houston that lost power as a result of the first two storms\\\n- investigate if socioeconomic factors are predictors of communities recovery from a power outage\n\nThe analysis will be based on remotely-sensed night lights data, acquired from the [Visible Infrared Imaging Radiometer Suite (VIIRS)](https://en.wikipedia.org/wiki/Visible_Infrared_Imaging_Radiometer_Suite) onboard the Suomi satellite. In particular, we will use the VNP46A1 to detect differences in night lights before and after the storm to identify areas that lost electric power.\n\nTo determine the number of homes that lost power, we link (spatially join) these areas with [OpenStreetMap](https://www.openstreetmap.org/#map=4/38.01/-95.84) data on buildings and roads.\n\nTo investigate potential socioeconomic factors that influenced recovery, we will link our analysis with data from the US Census Bureau.\n\n##### Learning objectives:\n\n-   load vector/raster data\\\n-   simple raster operations\\\n-   simple vector operations\\\n-   spatial joins\n\n## Data\n\n#### Night lights\n\nUse NASA's Worldview to explore the data around the day of the storm. There are several days with too much cloud cover to be useful, but 2021-02-07 and 2021-02-16 provide two clear, contrasting images to visualize the extent of the power outage in Texas.\n\nVIIRS data is distributed through NASA's [Level-1 and Atmospheric Archive & Distribution System Distributed Active Archive Center (LAADS DAAC)](https://ladsweb.modaps.eosdis.nasa.gov/). Many NASA Earth data products are distributed in 10x10 degree tiles in sinusoidal equal-area projection. Tiles are identified by their horizontal and vertical position in the grid. Houston lies on the border of tiles h08v05 and h08v06. We therefore need to download two tiles per date.\n\n#### Roads\n\nTypically highways account for a large portion of the night lights observable from space (see Google's [Earth at Night](https://earth.google.com/web/@27.44405464,-84.7693044,206.63660162a,8916361.52264659d,35y,0h,0t,0r/data=CiQSIhIgMGY3ZTJkYzdlOGExMTFlNjk5MGQ2ZjgxOGQ2OWE2ZTc)). To minimize falsely identifying areas with reduced traffic as areas without power, we will ignore areas near highways.\n\n[OpenStreetMap (OSM)](https://planet.openstreetmap.org/) is a collaborative project which creates publicly available geographic data of the world. Ingesting this data into a database where it can be subsetted and processed is a large undertaking. Fortunately, third party companies redistribute OSM data. We used [Geofabrik's download sites](https://download.geofabrik.de/) to retrieve a shapefile of all highways in Texas and prepared a Geopackage (`.gpkg` file) containing just the subset of roads that intersect the Houston metropolitan area. \n\n#### Houses\n\nWe can also obtain building data from OpenStreetMap. We again downloaded from Geofabrick and prepared a GeoPackage containing only houses in the Houston metropolitan area.\\\n\n#### Socioeconomic\n\nWe cannot readily get socioeconomic information for every home, so instead we obtained data from the [U.S. Census Bureau's American Community Survey](https://www.census.gov/programs-surveys/acs) for census tracts in 2019. The *folder* `ACS_2019_5YR_TRACT_48.gdb` is an ArcGIS [\"file geodatabase\"](https://desktop.arcgis.com/en/arcmap/latest/manage-data/administer-file-gdbs/file-geodatabases.htm), a multi-file proprietary format that's roughly analogous to a GeoPackage file.\\\n\nWe use `st_layers()` to explore the contents of the geodatabase. Each layer contains a subset of the fields documents in the [ACS metadata](https://www2.census.gov/geo/docs/maps-data/data/tiger/prejoined/ACSMetadata2011.txt).\\\n\nThe geodatabase contains a layer holding the geometry information, separate from the layers holding the ACS attributes. You have to combine the geometry with the attributes to get a feature layer that `sf` can use.\n\n\n\n\n\n## Project \n\nLoad and visualize aerial raster files during the blackout and after: \n\n::: {.cell}\n\n```{.r .cell-code}\n#--- Load in the raster files for the tiles you want\n\ntile1_0207_path <- file.path(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data\", \"VNP46A1\", \n                            \"VNP46A1.A2021038.h08v05.001.2021039064328.tif\")\ntile1_0207 <- read_stars(tile1_0207_path)\n\ntile2_0207_path <- file.path(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data\", \"VNP46A1\", \n                            \"VNP46A1.A2021038.h08v06.001.2021039064329.tif\")\ntile2_0207 <- read_stars(tile2_0207_path)\n\ntile1_0216_path <- file.path(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data\", \"VNP46A1\", \n                            \"VNP46A1.A2021047.h08v05.001.2021048091106.tif\")\ntile1_0216 <- read_stars(tile1_0216_path)\n\ntile2_0216_path <- file.path(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data\", \"VNP46A1\", \n                            \"VNP46A1.A2021047.h08v06.001.2021048091105.tif\")\ntile2_0216 <- read_stars(tile2_0216_path)\n\n#--- Use st_mosaic() to combine tiles for each date\n\nrast_0207 <- st_mosaic(tile1_0207, tile2_0207)\nrast_0216 <- st_mosaic(tile1_0216, tile2_0216)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- Visualize the rasters that we created \nplot(rast_0207) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\ndownsample set to 6\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(rast_0216)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ndownsample set to 6\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\nHow to change a `stars` object into an `sf` object:\n\n::: {.cell}\n\n```{.r .cell-code}\nsfrast_0207 <- st_as_sf(rast_0207) #sf object in wgs84\n```\n:::\n\n\n##### Create a Blackout Mask\n\n-   find the change in night lights intensity (presumably) caused by the storm\n-   reclassify the difference raster, assuming that any location that experienced a drop of more than 200 nW cm^-2^sr^-1^ experienced a blackout\n-   assign `NA` to all locations that experienced a drop of *less* than 200 nW cm^-2^sr^-1^\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- Get the difference in values for a new raster diff_rast\ndiff_rast <- rast_0216 - rast_0207 #stars object\ndiff_rast_over200 <- diff_rast > 200\ndiff_rast_over200[diff_rast_over200 == 0] = NA\nplot(diff_rast_over200) #stars object\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in plot.stars(diff_rast_over200): breaks=\"quantile\" leads to a single\nclass; maybe try breaks=\"equal\" instead?\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ndownsample set to 6\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n##### Vectorize the Mask \n\n-   use `st_as_sf()` to vectorize the blackout mask\n-   fix any invalid geometries using `st_make_valid`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- changing stars object to sf object\nblackout_vect <- st_as_sf(diff_rast_over200) |> \n  st_make_valid()\nplot(blackout_vect)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n##### Crop the Vectorized Map to Our Region of Interest \n\n-   define the Houston metropolitan area with the following coordinates\n    -   (-96.5, 29), (-96.5, 30.5), (-94.5, 30.5), (-94.5, 29)\n-   turn these coordinates into a polygon using `st_polygon`\n-   convert the polygon into a simple feature collection using `st_sfc()` and assign a CRS\n    -   because we are using this polygon to crop the night lights data it needs the same CRS\n-   crop (spatially subset) the blackout mask to our region of interest \n-   re-project the cropped blackout dataset to EPSG:3083 (NAD83 / Texas Centric Albers Equal Area)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- create a list of points for your polygon...THE ORDER MATTERS..\n#--- had to add the first point again at the end \n#--- to avoid an error about it not being 'closed'\nhouston_list = list(rbind(c(-96.5, 29), c(-96.5, 30.5), \n                          c(-94.5, 30.5), c(-94.5, 29), \n                          c(-96.5, 29)))  \n\n#--- now form a polygon from those points \nhouston_polygon <- st_polygon(houston_list) # 'polygon'\n\n#--- convert this to an sf object \nhouston_poly_sfc <- st_sfc(houston_polygon, crs = 4326) # 'sfc polygon'\nhouston_poly_sf <- st_as_sf(houston_poly_sfc) # 'sf object'\n\n#--- make spatial subset of the blackout mask with the polygon\nhouston_subset <- st_crop(blackout_vect, houston_poly_sf) # in wgs84\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout all\ngeometries\n```\n:::\n\n```{.r .cell-code}\n#--- convert this subset to EPSG 3083 projection\nhouston_blackout <- st_transform(houston_subset, \"EPSG: 3083\") # in NAD83\n```\n:::\n\n\n##### Exclude Highways from Blackout Mask \n\nThe roads geopackage includes data on roads other than highways. However, we can avoid reading in data we don't need by taking advantage of `st_read`'s ability to subset using a SQL query.\\\n\n-   define SQL query\n-   load just highway data from geopackage using `st_read`\n-   reproject data to EPSG:3083\n-   identify areas within 200m of all highways using `st_buffer`\n    -    `st_buffer` produces undissolved buffers, use `st_union` to dissolve them\n-   find areas that experienced blackouts that are further than 200m from a highway\n\n`query <- \"SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'\"`\\\n`highways <- st_read(\"data/gis_osm_roads_free_1.gpkg\", query = query)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- Define SQL query\nquery <- \"SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'\"\n\n#--- Load highway data from geopackage\nhighways <- st_read(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/gis_osm_roads_free_1.gpkg\", query = query)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading query `SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'' from data source `/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/gis_osm_roads_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 6085 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -96.50429 ymin: 29.00174 xmax: -94.39619 ymax: 30.50886\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n#--- Set CRS\nhighways3083 <- st_transform(highways, \"EPSG:3083\")\nhighways3083_geom <- highways3083$geom\n\n#--- Create buffer of 200m from highways (I believe that meters is default units for NAD83)**\n#--- highway_buffer is now \"sfc_MULTIPOYGON\"\nhighway_buffer <- st_buffer(highways3083_geom, dist = 200) |> st_union()\n\n#--- Now we can make our mask\nhouston_no_hwy <- houston_blackout[highway_buffer, op = st_disjoint]\n```\n:::\n\n\n#### Find homes impacted by blackouts\n\n##### load buildings data \n\n-   load buildings dataset using `st_read` and the following SQL query to select only residential buildings\n-    reproject data to EPSG:3083\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhomes_query <- \"SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')\"\n\nhomes <- st_read(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/gis_osm_buildings_a_free_1.gpkg\", query = homes_query) |> \n  st_transform(\"EPSG:3083\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading query `SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')' from data source `/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/gis_osm_buildings_a_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 475941 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.50055 ymin: 29.00344 xmax: -94.53285 ymax: 30.50393\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\n##### find homes in blackout areas \n\n-   filter to homes within blackout areas\n-   count number of impacted homes\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- filter for the homes that are within the blackout vector (I'm assuming we are using what I just made above for this)\nblackout_homes <- homes[houston_no_hwy, \"geom\"]\n\n#--- count the number of homes in this subset\nprint(nrow(blackout_homes)) #--- 71,233 homes affected\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 71233\n```\n:::\n:::\n\n\n#### Investigate socioeconomic factors\n\n##### load ACS data \n\n-   use `st_read()` to load the geodatabase layers\n-   geometries are stored in the `ACS_2019_5YR_TRACT_48_TEXAS` layer\n-   income data is stored in the `X19_INCOME` layer\n-   select the median income field `B19013e1`\n-   hint: reproject data to EPSG:3083\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- read geometries layer and change the column to match \ntract <- st_read(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\", \n                      layer = \"ACS_2019_5YR_TRACT_48_TEXAS\") |> \n  mutate(GEOID = GEOID_Data) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `ACS_2019_5YR_TRACT_48_TEXAS' from data source \n  `/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\nSimple feature collection with 5265 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83716 xmax: -93.50804 ymax: 36.5007\nGeodetic CRS:  NAD83\n```\n:::\n\n```{.r .cell-code}\n#--- read in the income layer and select columns GEOID and median income\nmedian_income <- st_read(\"/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\",\n                     layer = \"X19_INCOME\", \n                     geometry_column = \"GEOID\") |> \n  select(\"GEOID\", \"B19013e1\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `X19_INCOME' from data source \n  `/Users/jaredpetry/Documents/MEDS/fall/eds223_geospatial/assignments/assignment3-jaredbpetry/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n```\n:::\n:::\n\n\n##### Determine which census tracts experienced blackouts \n\n-   join the income data to the census tract geometries\n-   make sure to join by geometry ID\n-   spatially join census tract data with buildings determined to be impacted by blackouts\n-   find which census tracts had blackouts\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- left join with the blackout info to get geometries\ntract_w_income <- left_join(tract, median_income, \n                           by = \"GEOID\") |> \n  st_transform(crs = \"EPSG:3083\") |> \n  rename(median_income = B19013e1)\n\n#--- spatially join with buildings that experienced blackouts (blackout_homes)\nblack_tract_vector <- st_join(blackout_homes, tract_w_income, \n                            join = st_within)\n# plot(income_buildings$geometry) \n# plot(blackout_homes)\n\n#--- find which census tracts have homes that experienced blackouts\n#--- to do this, find the unique rows by census tract from the object above\nprint(n_distinct(black_tract_vector$TRACTCE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 629\n```\n:::\n\n```{.r .cell-code}\n#--- this says that there are 629 unique tracts with homes that experienced blackouts\n\n#--- Make sure this is right with a couple methods:\nblack_tract_unique <- unique(black_tract_vector$TRACTCE)\n#--- also has 629 tracts with blackouts \n\n# create a subset of tracts that had blackouts in them\nblackout_tracts <- tract[tract$TRACTCE %in% \nblack_tract_unique,]\n\n# create a subset of tracts with no blackouts \nunaffected_tracts <- tract[!(tract$TRACTCE %in% black_tract_unique),]\n```\n:::\n\n\n##### Compare incomes of impacted tracts to unimpacted tracts \n\n-   create a map of median income by census tract, designating which tracts had blackouts\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- subset all the cencus tracts to houston only:\n#--- follow the same steps as before: crop while in wgs84 and then transform to \n#--- NAD83 after\n\nhouston_all_tracts <- tract_w_income |> \n  st_transform(\"EPSG:4326\") |> \n  st_crop(houston_poly_sf) |> \n  st_transform(\"EPSG:3083\")  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout all\ngeometries\n```\n:::\n\n```{.r .cell-code}\n#--- also crop the blackout_tracts object\n\naffected_tract_cropped <- blackout_tracts |> \n  st_transform(\"EPSG:4326\") |> \n  st_crop(houston_poly_sf) |> \n  st_transform(\"EPSG:3083\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout all\ngeometries\n```\n:::\n\n```{.r .cell-code}\n#--- same thing for the unnafected tracts \n\nunaffected_tracts_cropped <- unaffected_tracts |> \n  st_transform(\"EPSG:4326\") |> \n  st_crop(houston_poly_sf) |> \n  st_transform(\"EPSG:3083\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout all\ngeometries\n```\n:::\n\n```{.r .cell-code}\n#--- Plot all tracts versum the blackout tracts to make sure we're on track:\n\n#plot all the houston tracts \nhouston_all_tracts_map <- tm_shape(houston_all_tracts) +\n  tm_polygons() \nhouston_all_tracts_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#--- Plot just blackout tracts \nblackout_tracts_map <- tm_shape(affected_tract_cropped) +\n  tm_polygons()\nblackout_tracts_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#--- Make a plot to see how that went\nunaffected_tracts_map <- tm_shape(unaffected_tracts_cropped) + \n  tm_polygons() \nunaffected_tracts_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\n## Results\n\n### Make the Map \n\nstart with all the tracts and color based on income\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- how are we gonna get the blackout status in the map?\n#--- make a dataframe with just tract, geoid, and median income\n#tract_geoid_income\n\n#--- First let's try making a map of just income and census tract\n\nmedian_income_map <- tm_shape(houston_all_tracts) + \n  tm_fill(col = \"median_income\", palette = \"YlOrRd\") +\n  tm_borders() +\n  tm_layout(legend.outside = T, \n            main.title = \"Median Income by Census tract\",\n            frame = T)\nmedian_income_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#--- Since there's a lot going on here, let's split into two maps to compare the blackout tracts vs. the anaffected tracts \n\n#--- add income data to affected tracts\nblackout_w_income <- st_join(affected_tract_cropped, tract_w_income)\n\n#--- make map of blackout tracts\nblackout_w_income_map <- tm_shape(blackout_w_income) + \n  tm_fill(col = \"median_income\", palette = \"YlOrRd\") +\n  tm_layout(legend.position = c(\"right\", \"top\"),\n            legend.width = .3,\n            legend.height = .2,\n            main.title = \"Income in affected tracts\",\n            main.title.size = 1,\n            frame = T)\n\n#--- add income data to unaffected tracts\nunaffected_w_income <- st_join(unaffected_tracts_cropped, tract_w_income)\n\n#--- make map of unaffected tracts\nunaffected_w_income_map <- tm_shape(unaffected_w_income) + \n  tm_fill(col = \"median_income\", palette = \"YlOrRd\") +\n  tm_layout(legend.show = F, \n            main.title = \"Income in unaffected tracts\",\n            main.title.size = 1,\n            frame = T)\n\ntmap_arrange(blackout_w_income_map, unaffected_w_income_map, \n             ncol = 2, \n             nrow = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\nplot the distribution of income in impacted and unimpacted tracts\n\n::: {.cell}\n\n```{.r .cell-code}\n#--- make two boxplots next to eachother with income data of tracts to compare blackout vs. non-blackout tracts \n\nboxplot(blackout_w_income$median_income, unaffected_w_income$median_income, \n        names = c(\"affected\", \"unaffected\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n#### Discussion: \n\nUpon looking at the maps and boxplot I made above, there does not seem to be a very significant difference in the median income between the two groups: those affected by the blackout and those not affected. That really surprised me because I believe that the electrical infrastructure in lower income neighborhoods would have likely been older and more subject to failure while the grid was in a stressful state during this weather event. I would say that a limitation to this study is the fact that the two satellite images that we started with happened to be a bit far apart temporally. I would hypothesize that if we were able to obtain a photo right before the blackout happened, and then right when the blackout was at its most severe, we would have been able to see a larger difference, and possibly seen more significant results. Additionally, the data may have been slightly misleading for the income data because the areas farther from the city seemed to be much less affected, and likely contain very different demographics than those closer to the urban areas of Houston. I noticed that the more rural areas tended to have slightly lower median incomes. It would be interesting to focus on a smaller area, because these large tracts may have skewed our data a bit.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}